docker push localhost:32000/es-init
docker push localhost:32000/tester
docker push localhost:32000/fileserver
docker push localhost:32000/fscrawler
docker push localhost:32000/elasticsearch1
docker push localhost:32000/elasticsearch-client

kompose convert
kompose --file docker-compose3.yml --volumes hostPath convert 

microk8s.kubectl apply -f elasticsearch-deployment.yaml,fscrawler-deployment.yaml,elasticsearch-service.yaml,fscrawler-net-networkpolicy.yaml
microk8s.kubectl apply -f elasticsearch1-claim0-persistentvolumeclaim.yaml,elasticsearch-client-service.yaml,fileserver-service.yaml,tester-claim0-persistentvolumeclaim.yaml,elasticsearch1-deployment.yaml,es-init-deployment.yaml,fscrawler-claim0-persistentvolumeclaim.yaml,tester-deployment.yaml,elasticsearch1-service.yaml,fileserver-claim0-persistentvolumeclaim.yaml,fscrawler-claim1-persistentvolumeclaim.yaml,elasticsearch-client-deployment.yaml,fileserver-deployment.yaml,fscrawler-deployment.yaml
#microk8s.kubectl apply -f fscrawler-deployment.yaml
#microk8s.kubectl apply -f elasticsearch1-service.yaml

microk8s kubectl get all --all-namespaces

microk8s kubectl rollout restart deployment
microk8s kubectl logs fscrawler-65554b8db5-5f6qr
microk8s kubectl expose deployment elasticsearch-client --type=NodePort --port=1358 --name=elasticsearch-client-service
microk8s kubectl expose deployment elasticsearch1 --type=NodePort --port=9200 --name=elasticsearch1-service
microk8s kubectl expose deployment fileserver --type=NodePort --port=3000 --nodePort=9200 --name=fileserver-service

microk8s.kubectl describe pod
microk8s inspect

microk8s start
microk8s ctr images ls
microk8s kubectl exec -it fscrawler-7c95bc4459-tzlbm -- /bin/bash
microk8s kubectl exec -it elasticsearch-6b87b97477-8k2sf -- /bin/bash
microk8s stop

# to remove all images:
# get all images that start with localhost:32000, output the results into image_ls file
sudo microk8s ctr images ls name~='localhost:32000' | awk {'print $1'} > image_ls 
# loop over file, remove each image
cat image_ls | while read line || [[ -n $line ]];
do
    microk8s ctr images rm $line
done;

microk8s kubectl delete --all pods --namespace=default
microk8s kubectl delete --all deployments --namespace=default
microk8s kubectl delete --all service --namespace=default
microk8s kubectl get netpol -n default
microk8s kubectl delete netpol fscrawler-net -n default

microk8s enable host-access

