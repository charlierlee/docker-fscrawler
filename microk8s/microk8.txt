#among other things:
https://pacroy.medium.com/single-node-kubernetes-on-home-lab-using-microk8s-metallb-and-traefik-7bb1ea38fcc2

microk8s enable host-access

docker push localhost:32000/es-init
docker push localhost:32000/tester
docker push localhost:32000/fileserver
docker push localhost:32000/fscrawler
docker push localhost:32000/elasticsearch1
docker push localhost:32000/elasticsearch-client
docker push localhost:32000/deepdetectgpu


kompose --volumes hostPath convert
kompose --file docker-compose3.yml --volumes hostPath convert

microk8s.kubectl apply -f elasticsearch1-deployment.yaml,elasticsearch-client-deployment.yaml,es-init-deployment.yaml,fileserver-service.yaml,tester-deployment.yaml,elasticsearch1-service.yaml,elasticsearch-client-service.yaml,fileserver-deployment.yaml,fscrawler-deployment.yaml
#microk8s.kubectl apply -f fscrawler-deployment.yaml
#microk8s.kubectl apply -f elasticsearch1-deployment.yaml
microk8s.kubectl apply -f elasticsearch-client-service.yaml
microk8s.kubectl apply -f elasticsearch-client-deployment.yaml

microk8s.kubectl apply -f deepdetectgpu-service.yaml
microk8s.kubectl apply -f deepdetectgpu-deployment.yaml

microk8s kubectl get all --all-namespaces
microk8s kubectl rollout restart deployment elasticsearch1
microk8s kubectl rollout restart deployment elasticsearch-client
microk8s kubectl rollout restart deployment
microk8s kubectl logs elasticsearch1-b46cb75d8-qd7fv
microk8s kubectl expose deployment elasticsearch-client --type=NodePort --port=1358 --name=elasticsearch-client-service
microk8s kubectl expose deployment elasticsearch1 --type=NodePort --port=9200 --name=elasticsearch1-service
microk8s kubectl expose deployment fileserver --type=NodePort --port=3000 --nodePort=9200 --name=fileserver-service

microk8s kubectl port-forward service/elasticsearch-client 1358:1358 -n default

microk8s.kubectl describe pod
microk8s inspect

microk8s start
microk8s ctr images ls
microk8s kubectl exec -it fscrawler-7c95bc4459-tzlbm -- /bin/bash
microk8s kubectl exec -it elasticsearch-6b87b97477-8k2sf -- /bin/bash
microk8s stop

# to remove all images:
# get all images that start with localhost:32000, output the results into image_ls file
sudo microk8s ctr images ls name~='localhost:32000' | awk {'print $1'} > image_ls 
# loop over file, remove each image
cat image_ls | while read line || [[ -n $line ]];
do
    microk8s ctr images rm $line
done;

microk8s kubectl delete --all pods --namespace=default
microk8s kubectl delete --all deployments --namespace=default
microk8s kubectl delete --all service --namespace=default

microk8s kubectl get netpol -n default
microk8s kubectl delete netpol fscrawler-net -n default

curl -XDELETE localhost:9200/docker-compose
curl -XDELETE localhost:9200/docker-compose_folder

curl -XPUT -H 'Content-Type: application/json' 'elasticsearch1:9200/docker-compose/_settings' -d '
{
    "index" : {
        "number_of_replicas" : 1
    }
}'

curl -XPUT -H 'Content-Type: application/json' 'elasticsearch1:9200/docker-compose_folder/_settings' -d '
{
    "index" : {
        "number_of_replicas" : 5
    }
}'

curl -XPOST 'localhost:9200/_cluster/reroute' -d '{
    "commands": [{
        "allocate": {
            "index": "docker-compose",
            "shard": 0,
            "node": "search03",
            "allow_primary": 1
        }
    }]
}' 

curl -XPOST -d '{ "commands" : [ {
  "allocate" : {
       "index" : "docker-compose", 
       "shard" : 0, 
       "node" : "Fo2G1cR",
       "allow_primary":true 
     } 
  } ] }' http://localhost:9200/_cluster/reroute?pretty
